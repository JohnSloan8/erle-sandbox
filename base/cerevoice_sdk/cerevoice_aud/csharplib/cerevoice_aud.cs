//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class cerevoice_aud {
  public static SWIGTYPE_p_CPRC_sc_player CPRC_sc_player_new(int sample_rate) {
    global::System.IntPtr cPtr = cerevoice_audPINVOKE.CPRC_sc_player_new(sample_rate);
    SWIGTYPE_p_CPRC_sc_player ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CPRC_sc_player(cPtr, false);
    return ret;
  }

  public static void CPRC_sc_player_delete(SWIGTYPE_p_CPRC_sc_player player) {
    cerevoice_audPINVOKE.CPRC_sc_player_delete(SWIGTYPE_p_CPRC_sc_player.getCPtr(player));
  }

  public static double CPRC_sc_player_stream_time(SWIGTYPE_p_CPRC_sc_player player) {
    double ret = cerevoice_audPINVOKE.CPRC_sc_player_stream_time(SWIGTYPE_p_CPRC_sc_player.getCPtr(player));
    return ret;
  }

  public static double CPRC_sc_player_stream_duration(SWIGTYPE_p_CPRC_sc_player player) {
    double ret = cerevoice_audPINVOKE.CPRC_sc_player_stream_duration(SWIGTYPE_p_CPRC_sc_player.getCPtr(player));
    return ret;
  }

  public static int CPRC_sc_player_samples_sent(SWIGTYPE_p_CPRC_sc_player player) {
    int ret = cerevoice_audPINVOKE.CPRC_sc_player_samples_sent(SWIGTYPE_p_CPRC_sc_player.getCPtr(player));
    return ret;
  }

  public static int CPRC_sc_player_sample_rate(SWIGTYPE_p_CPRC_sc_player player) {
    int ret = cerevoice_audPINVOKE.CPRC_sc_player_sample_rate(SWIGTYPE_p_CPRC_sc_player.getCPtr(player));
    return ret;
  }

  public static SWIGTYPE_p_CPRC_sc_audio CPRC_sc_audio_short(SWIGTYPE_p_short data, int len) {
    global::System.IntPtr cPtr = cerevoice_audPINVOKE.CPRC_sc_audio_short(SWIGTYPE_p_short.getCPtr(data), len);
    SWIGTYPE_p_CPRC_sc_audio ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CPRC_sc_audio(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_CPRC_sc_audio CPRC_sc_audio_short_offset(SWIGTYPE_p_short data, int offset, int len) {
    global::System.IntPtr cPtr = cerevoice_audPINVOKE.CPRC_sc_audio_short_offset(SWIGTYPE_p_short.getCPtr(data), offset, len);
    SWIGTYPE_p_CPRC_sc_audio ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CPRC_sc_audio(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_CPRC_sc_audio CPRC_sc_audio_short_disposable(SWIGTYPE_p_short data, int len) {
    global::System.IntPtr cPtr = cerevoice_audPINVOKE.CPRC_sc_audio_short_disposable(SWIGTYPE_p_short.getCPtr(data), len);
    SWIGTYPE_p_CPRC_sc_audio ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CPRC_sc_audio(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_CPRC_sc_audio CPRC_sc_audio_short_alloc(SWIGTYPE_p_short data, int offset, int len, int alloc) {
    global::System.IntPtr cPtr = cerevoice_audPINVOKE.CPRC_sc_audio_short_alloc(SWIGTYPE_p_short.getCPtr(data), offset, len, alloc);
    SWIGTYPE_p_CPRC_sc_audio ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CPRC_sc_audio(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_CPRC_sc_audio CPRC_sc_audio_tone(int sample_rate, double freq, int len) {
    global::System.IntPtr cPtr = cerevoice_audPINVOKE.CPRC_sc_audio_tone(sample_rate, freq, len);
    SWIGTYPE_p_CPRC_sc_audio ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CPRC_sc_audio(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_CPRC_sc_audio CPRC_sc_audio_pythonstr(string data, int len) {
    global::System.IntPtr cPtr = cerevoice_audPINVOKE.CPRC_sc_audio_pythonstr(data, len);
    SWIGTYPE_p_CPRC_sc_audio ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CPRC_sc_audio(cPtr, false);
    return ret;
  }

  public static CPRC_SC_STAT CPRC_sc_audio_status(SWIGTYPE_p_CPRC_sc_audio audio) {
    CPRC_SC_STAT ret = (CPRC_SC_STAT)cerevoice_audPINVOKE.CPRC_sc_audio_status(SWIGTYPE_p_CPRC_sc_audio.getCPtr(audio));
    return ret;
  }

  public static CPRC_SC_CHANNEL CPRC_sc_audio_channel_type(SWIGTYPE_p_CPRC_sc_audio audio) {
    CPRC_SC_CHANNEL ret = (CPRC_SC_CHANNEL)cerevoice_audPINVOKE.CPRC_sc_audio_channel_type(SWIGTYPE_p_CPRC_sc_audio.getCPtr(audio));
    return ret;
  }

  public static void CPRC_sc_audio_channel(SWIGTYPE_p_CPRC_sc_audio audio, CPRC_SC_CHANNEL chan) {
    cerevoice_audPINVOKE.CPRC_sc_audio_channel(SWIGTYPE_p_CPRC_sc_audio.getCPtr(audio), (int)chan);
  }

  public static double CPRC_sc_audio_start_time(SWIGTYPE_p_CPRC_sc_audio audio) {
    double ret = cerevoice_audPINVOKE.CPRC_sc_audio_start_time(SWIGTYPE_p_CPRC_sc_audio.getCPtr(audio));
    return ret;
  }

  public static void CPRC_sc_audio_delete(SWIGTYPE_p_CPRC_sc_audio audio) {
    cerevoice_audPINVOKE.CPRC_sc_audio_delete(SWIGTYPE_p_CPRC_sc_audio.getCPtr(audio));
  }

  public static int CPRC_sc_audio_play(SWIGTYPE_p_CPRC_sc_player player, SWIGTYPE_p_CPRC_sc_audio cue) {
    int ret = cerevoice_audPINVOKE.CPRC_sc_audio_play(SWIGTYPE_p_CPRC_sc_player.getCPtr(player), SWIGTYPE_p_CPRC_sc_audio.getCPtr(cue));
    return ret;
  }

  public static CPRCTHD_CUE CPRC_sc_audio_cue(SWIGTYPE_p_CPRC_sc_player player, SWIGTYPE_p_CPRC_sc_audio cue) {
    CPRCTHD_CUE ret = (CPRCTHD_CUE)cerevoice_audPINVOKE.CPRC_sc_audio_cue(SWIGTYPE_p_CPRC_sc_player.getCPtr(player), SWIGTYPE_p_CPRC_sc_audio.getCPtr(cue));
    return ret;
  }

  public static CPRCTHD_CUE CPRC_sc_audio_cue_insert(SWIGTYPE_p_CPRC_sc_player player, SWIGTYPE_p_CPRC_sc_audio cue, int idx) {
    CPRCTHD_CUE ret = (CPRCTHD_CUE)cerevoice_audPINVOKE.CPRC_sc_audio_cue_insert(SWIGTYPE_p_CPRC_sc_player.getCPtr(player), SWIGTYPE_p_CPRC_sc_audio.getCPtr(cue), idx);
    return ret;
  }

  public static void CPRC_sc_sleep_msecs(int msecs) {
    cerevoice_audPINVOKE.CPRC_sc_sleep_msecs(msecs);
  }

  public static int CPRC_sc_audio_busy(SWIGTYPE_p_CPRC_sc_player player) {
    int ret = cerevoice_audPINVOKE.CPRC_sc_audio_busy(SWIGTYPE_p_CPRC_sc_player.getCPtr(player));
    return ret;
  }

  public static int CPRC_sc_audio_pauseon(SWIGTYPE_p_CPRC_sc_player player) {
    int ret = cerevoice_audPINVOKE.CPRC_sc_audio_pauseon(SWIGTYPE_p_CPRC_sc_player.getCPtr(player));
    return ret;
  }

  public static int CPRC_sc_audio_pauseoff(SWIGTYPE_p_CPRC_sc_player player) {
    int ret = cerevoice_audPINVOKE.CPRC_sc_audio_pauseoff(SWIGTYPE_p_CPRC_sc_player.getCPtr(player));
    return ret;
  }

  public static int CPRC_sc_audio_paused(SWIGTYPE_p_CPRC_sc_player player) {
    int ret = cerevoice_audPINVOKE.CPRC_sc_audio_paused(SWIGTYPE_p_CPRC_sc_player.getCPtr(player));
    return ret;
  }

  public static int CPRC_sc_audio_stop(SWIGTYPE_p_CPRC_sc_player player) {
    int ret = cerevoice_audPINVOKE.CPRC_sc_audio_stop(SWIGTYPE_p_CPRC_sc_player.getCPtr(player));
    return ret;
  }

  public static int CPRC_sc_audio_skip(SWIGTYPE_p_CPRC_sc_player player, int tostart) {
    int ret = cerevoice_audPINVOKE.CPRC_sc_audio_skip(SWIGTYPE_p_CPRC_sc_player.getCPtr(player), tostart);
    return ret;
  }

}
